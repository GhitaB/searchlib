(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[83],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return h}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(n),h=r,g=f["".concat(s,".").concat(h)]||f[h]||p[h]||o;return n?i.createElement(g,a(a({ref:t},u),{},{components:n})):i.createElement(g,a({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6378:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var i=n(2122),r=n(9756),o=(n(7294),n(3905)),a={},c={unversionedId:"searchlib-ui/configuration",id:"searchlib-ui/configuration",isDocsHomePage:!1,title:"Configuration",description:"One of the goals of the Searchlib is that it's easy to integrate and manage",source:"@site/docs/searchlib-ui/3-configuration.md",sourceDirName:"searchlib-ui",slug:"/searchlib-ui/configuration",permalink:"/searchlib/docs/searchlib-ui/configuration",editUrl:"https://github.com/eea/searchlib/edit/main/website/docs/searchlib-ui/3-configuration.md",version:"current",sidebarPosition:3,frontMatter:{},sidebar:"sidebar",previous:{title:"Language features",permalink:"/searchlib/docs/searchlib-ui/language"},next:{title:"Developing Searchlib-UI",permalink:"/searchlib/docs/searchlib-ui/developing"}},s=[{value:"The Configuration singleton",id:"the-configuration-singleton",children:[]},{value:"The application configuration",id:"the-application-configuration",children:[]},{value:"Runtime configuration",id:"runtime-configuration",children:[]}],l={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'One of the goals of the Searchlib is that it\'s easy to integrate and manage\nwith various system and even allow through the web customizations, so we should\nbe able to serialize the configuration as JSON. To make that possible, we\nsplit the configuration in two parts: the "app configuration" and the\n"live registry" with component registrations.'),(0,o.kt)("h2",{id:"the-configuration-singleton"},"The Configuration singleton"),(0,o.kt)("p",null,"To access the configuration object, you can simply import it as a singleton:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import registry from '@eeacms/search/registry';\n")),(0,o.kt)("p",null,"This config object has two parts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"searchui"),', which should be JSON-serializable. This is an object where each\nkey is an "appConfig". The "base" configuration is the ',(0,o.kt)("inlineCode",{parentName:"li"},"default"),", but you\nshould derive each configuration branch from one of the existing branches\n(so at least derive from ",(0,o.kt)("inlineCode",{parentName:"li"},"default"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resolve"),", which is a mapping of names to React components.")),(0,o.kt)("p",null,"You should register components in ",(0,o.kt)("inlineCode",{parentName:"p"},"registry.resolve"),' and point to these\ncomponents using plain strings from the "app configuration" branch.'),(0,o.kt)("h2",{id:"the-application-configuration"},"The application configuration"),(0,o.kt)("p",null,"Each application needs to use just a single branch of the ",(0,o.kt)("inlineCode",{parentName:"p"},"registry.searchui"),"\nconfiguration object. This is achieved by passing the config registry and the\napp name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import registry from '@eeacms/search/registry';\nimport installDemo from './demo';\n\nconst demoRegistry = installDemo(registry);\n\nReactDOM.render(\n  <SearchApp registry={demoRegistry} appName=\"wise\" />,\n  document.getElementById('root'),\n);\n")),(0,o.kt)("p",null,"Check the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eea/searchlib/tree/main/packages/demo"},"demo"),"\npackage for more details."),(0,o.kt)("h2",{id:"runtime-configuration"},"Runtime configuration"),(0,o.kt)("p",null,"You can set ",(0,o.kt)("inlineCode",{parentName:"p"},"config.host")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"config.elastic_index")," to adjust for the specific\nElasticSearch host and index."))}u.isMDXComponent=!0}}]);