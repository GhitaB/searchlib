(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[723],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=a,f=d["".concat(c,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8606:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={},l={unversionedId:"searchlib-ui/standalone",id:"searchlib-ui/standalone",isDocsHomePage:!1,title:"Running as standalone app",description:"The standalone version runs as a Razzle-powered application, available in the",source:"@site/docs/searchlib-ui/5-standalone.md",sourceDirName:"searchlib-ui",slug:"/searchlib-ui/standalone",permalink:"/searchlib/docs/searchlib-ui/standalone",editUrl:"https://github.com/eea/searchlib/edit/develop/website/docs/searchlib-ui/5-standalone.md",version:"current",sidebarPosition:5,frontMatter:{},sidebar:"sidebar",previous:{title:"Developing Searchlib-UI",permalink:"/searchlib/docs/searchlib-ui/developing"},next:{title:"Integrate with classic Plone",permalink:"/searchlib/docs/searchlib-ui/plone"}},c=[{value:"Development",id:"development",children:[]},{value:"Production",id:"production",children:[]}],s={toc:c};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The standalone version runs as a Razzle-powered application, available in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"packages/searchlib-standalone"),"."),(0,i.kt)("h2",{id:"development"},"Development"),(0,i.kt)("p",null,"Right now it's not possible to include and compile ",(0,i.kt)("inlineCode",{parentName:"p"},"searchlib")," as development\npackage in the ",(0,i.kt)("inlineCode",{parentName:"p"},"searchlib-standalone")," application. So the first step is to\nstart a ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack watch")," process in the ",(0,i.kt)("inlineCode",{parentName:"p"},"searchlib")," folder, by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd packages/searchlib\npnpm run watch\n")),(0,i.kt)("p",null,"The go to the searchlib-standalone folder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd packages/searchlib-standalone\npnpm run start\n")),(0,i.kt)("h2",{id:"production"},"Production"),(0,i.kt)("p",null,"For production we have a docker image prepared, with a Dockerfile in the root\nof the searchlib repo. See the docker-compose.yml file in that location for how\nto run it."),(0,i.kt)("p",null,"The production runtime can be configured via environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"RAZZLE_APP_NAME"),': this is the name of the "branch" of the configuration\nregistry that should be used in configuring the searchlib-powered\napplication.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PROXY_ELASTIC_HOST"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PROXY_ELASTIC_PORT"),": this is the internally accessible host and port number of the ElasticSearch\nserver. Setting this allows the searchlib-standalone to expose ES through a\nproxy, to aid with CORS issues. If not specified, 'localhost' and '9200' will be used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PROXY_ELASTIC_USER"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PROXY_ELASTIC_PWD"),": if specified, these credentials will be used to create the connection for ElasticSearch"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PROXY_ELASTIC_INDEX"),": The name of the index what will be made available via the proxy. Other indices will not be accessible."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"RAZZLE_ES_PROXY_ADDR"),": The address of the proxy. It defaults to http://localhost:3000, but can be different if the proxy is running\nindependently of the application")))}p.isMDXComponent=!0}}]);